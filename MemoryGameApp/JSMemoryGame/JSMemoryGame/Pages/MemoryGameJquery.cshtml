@page
@model JSMemoryGame.Pages.Shared.MemoryGameJqueryModel
@{
}
<div class="row">
    <div class="col-1">
        <button class="btn btn-warning fs-3" id="btnStart" onclick="startGame()">Start</button>
    </div>
    <div class="col-2">
        <button class="btn btn-warning fs-3" id="btnNextTurn" onclick="nextTurn()" disabled>Next Turn</button>
    </div>
    <div class="col-3">
        <label class="align-self-center fs-3">Turn Number:</label>
        <div id="turnnumber" class="text-center"></div>
    </div>
    <div class="col-4">
        <label class="align-self-center fs-3">Score:</label>
        <div id="scorenumber" class="text-center"></div>
    </div>
</div>
<div class="row">
    <table>
        <tr>
            <td>
                <button class="spot " color="" id="s11"></button>
            </td>
            <td>
                <button class="spot " color="" id="s12"></button>
            </td>
            <td>
                <button class="spot " color="" id="s13"></button>
            </td>
            <td>
                <button class="spot " color="" id="s14"></button>
            </td>
            <td>
                <button class="spot " color="" id="s15"></button>
            </td>
            <td>
                <button class="spot " color="" id="s16"></button>
            </td>
        </tr>
        <tr>
            <td>
                <button class="spot " color="" id="s21"></button>
            </td>
            <td>
                <button class="spot " color="" id="s22"></button>
            </td>
            <td>
                <button class="spot " color="" id="s23"></button>
            </td>
            <td>
                <button class="spot " color="" id="s24"></button>
            </td>
            <td>
                <button class="spot " color="" id="s25"></button>
            </td>
            <td>
                <button class="spot " color="" id="s26"></button>
            </td>
        </tr>
        <tr>
            <td>
                <button class="spot " color="" id="s31"></button>
            </td>
            <td>
                <button class="spot " color="" id="s32"></button>
            </td>
            <td>
                <button class="spot " color="" id="s33"></button>
            </td>
            <td>
                <button class="spot " color="" id="s34"></button>
            </td>
            <td>
                <button class="spot " color="" id="s35"></button>
            </td>
            <td>
                <button class="spot " color="" id="s36"></button>
            </td>
        </tr>
        <tr>
            <td>
                <button class="spot " color="" id="s41"></button>
            </td>
            <td>
                <button class="spot " color="" id="s42"></button>
            </td>
            <td>
                <button class="spot " color="" id="s43"></button>
            </td>
            <td>
                <button class="spot " color="" id="s44"></button>
            </td>
            <td>
                <button class="spot " color="" id="s45"></button>
            </td>
            <td>
                <button class="spot " color="" id="s46"></button>
            </td>
        </tr>
        <tr>
            <td>
                <button class="spot " color="" id="s51"></button>
            </td>
            <td>
                <button class="spot " color="" id="s52"></button>
            </td>
            <td>
                <button class="spot " color="" id="s53"></button>
            </td>
            <td>
                <button class="spot " color="" id="s54"></button>
            </td>
            <td>
                <button class="spot " color="" id="s55"></button>
            </td>
            <td>
                <button class="spot " color="" id="s56"></button>
            </td>
        </tr>
        <tr>
            <td>
                <button class="spot " color="" id="s61"></button>
            </td>
            <td>
                <button class="spot " color="" id="s62"></button>
            </td>
            <td>
                <button class="spot " color="" id="s63"></button>
            </td>
            <td>
                <button class="spot " color="" id="s64"></button>
            </td>
            <td>
                <button class="spot " color="" id="s65"></button>
            </td>
            <td>
                <button class="spot " color="" id="s66"></button>
            </td>
        </tr>
    </table>
</div>


@section Scripts{
    <script>
        let gameOver = false;
        let nextturn = false;
        let btn1 = "";
        let btn2 = "";
        let turnnumint = 1;
        let scorenumint = 1;
        let turnNumber = document.querySelector("#turnnumber");
        let scoreNumber = document.querySelector("#scorenumber");
        let allSpots = [...document.querySelectorAll(".spot")];
        let spotsToMatch = [...document.querySelectorAll(".spot")];
        let winningsets = [];
        //AF What is "chunk" referring to?  It doesn't seem like such a clear variable name to me
        let chunk = [];

        let lstColorClasses = [];
        lstColorClasses.push('m1', 'm2', 'm3', 'm4', 'm5', 'm6', 'm7', 'm8', 'm9', 'm10', 'm11', 'm12', 'm13', 'm14', 'm15', 'm16', 'm17', 'm18');

        setMatchesRandomly();
        $(allSpots).click(takeSpot);

        startGame();

        //AF  A lot more code should be moved into the document.ready, you can look back at the session to review if you need clarification on what should be in here
        $(document).ready(function () {
            //AF I see you are setting these variables to the same values as you set them above, it doesn't seem necessary
            turnNumber = document.querySelector("#turnnumber");
            scoreNumber = document.querySelector("#scorenumber");
            allSpots = [...document.querySelectorAll(".spot")];
            spotsToMatch = [...document.querySelectorAll(".spot")];
        })

        function setMatchesRandomly() {
            let s = spotsToMatch.length;
            spotsToMatch.sort(() => Math.random() - 0.5);

            for (let i = 0; i < spotsToMatch.length; i += 2) {
                chunk = [spotsToMatch.slice(i, i + 2)];
                winningsets.push(...chunk);
            }
            console.log(winningsets);

            lstColorClasses.sort(() => Math.random() - 0.5);
            winningsets.forEach(function (set, index) { set.forEach(function (button) { button.setAttribute("color", lstColorClasses[index]) }) });
        }

        function startGame() {
            gameOver = false;
            nextturn = false;
            btn1 = "";
            btn2 = "";
            turnnumint = 1;
            scorenumint = 1;
            turnNumber.textContent = 0;
            scoreNumber.textContent = 0;
            $(allSpots).removeClass("alreadyMatched").removeClass(getAttribute("color")).addClass("notClicked");
            //AF For this HW, Jquery should be used here since the instructions were to use jquery in places where it would be more efficient and this is a good example of that
            allSpots.forEach(s => {
                s.disabled = false;
                //s.classList.remove(s.getAttribute("color"));
            });
        }

        function colorfulClickRandom(btn) {
            $(btn).removeClass("notClicked").addClass(btn.getAttribute("color"));
        }

        function takeSpot(event) {
            let btn = event.target;
            if (btn1 == "") {
                btn1 = btn;
                btn1.disabled = true;
            }
            else if (btn1 != "" && btn2 == "") {
                btn2 = btn;
                btn2.disabled = true;
            }
            else {
                return;
            }
            doTakeSpot(btn);
        }

        function doTakeSpot(btn) {
            if ($(btn).contains("notClicked")) {
                colorfulClickRandom(btn);
            }
            if ($(btn).contains("alreadyMatched")) {
                return;
            }
            if (btn2 != "") {
                document.getElementById("btnNextTurn").disabled = false;
            }
        }

        function nextTurn() {
            nextturn = true;
            turnNumber.textContent = turnnumint++;
            $(btn1).removeClass(btn1.getAttribute("color"));
            $(btn2).removeClass(btn1.getAttribute("color"));
            if (btn1.getAttribute("color") === btn2.getAttribute("color")) {
                $(btn1, btn2).addClass("alreadyMatched");
                scoreNumber.textContent = scorenumint++;
                btn1.disabled = true;
                btn2.disabled = true;
            }
            else {
                $(btn1, btn2).addClass("notClicked");
                btn1.disabled = false;
                btn.disabled = false;
            }
            document.getElementById("btnNextTurn").disabled = true;
            btn1 = "";
            btn2 = "";
        }

    </script>
}
